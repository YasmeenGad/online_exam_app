import 'dart:async';
import 'dart:io';

import 'package:dio/dio.dart';

import '../../domain/core/AppExceptions.dart';
import '../../domain/core/result.dart';

Future<Result<T>> executeApi<T>(Future<T> Function() apiCall) async {
  try {
    var result = await apiCall.call();
    return Success(result);
  } on TimeoutException catch(  ex){
      return Fail<T>(exception: NoInternetException());

  } on IOException catch (ex) {
    print('IOException: $ex');
    return Fail<T>(exception: ex);
  } on DioException catch (ex) {
    print('DioException: $ex');
    if (ex.response != null) {
      return Fail<T>(
        exception: ex,
      );
    } else {
      return Fail<T>(
        exception: ex,
      );
    }
  } on Exception catch (ex) {
    print('Unknown Exception: $ex');
    return Fail<T>(exception: ex);
  }
}
